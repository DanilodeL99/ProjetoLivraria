<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>