<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>